name: Create Sentry release
on:
    workflow_dispatch:
        inputs:
            version:
                required: true
                description: 'Release version number'

jobs:
    create-sentry-release:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - uses: pnpm/action-setup@v4
            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'pnpm'
                  cache-dependency-path: 'pnpm-lock.yaml'
            - name: Install packages
              run: pnpm install --frozen-lockfile --prefer-offline
            - name: Build common, cli, warehouses
              run: pnpm build-published-packages
            - name: Build frontend
              run: pnpm -F frontend build
            - name: List output frontend files - debugging
              run: ls -R ./packages/frontend/build/assets/
            - name: Build backend
              run: pnpm -F backend build-sourcemaps
            - name: List output backend files - debugging
              run: ls -R ./packages/backend/dist/
            - name: Create Sentry release (Frontend)
              uses: getsentry/action-release@v1
              env:
                  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
                  SENTRY_ORG: lightdash
                  SENTRY_PROJECT: lightdash-frontend
              with:
                  version: ${{ github.event.inputs.version }}
                  environment: 'cloud_beta'
                  sourcemaps: './packages/frontend/build/assets/'
            - name: Create Sentry release (Backend)
              uses: getsentry/action-release@v1
              env:
                  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
                  SENTRY_ORG: lightdash
                  SENTRY_PROJECT: lightdash-backend
              with:
                  version: ${{ github.event.inputs.version }}
                  environment: 'cloud_beta'
                  sourcemaps: './packages/backend/dist/'
