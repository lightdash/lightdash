import { Effect } from 'effect';
import { ParseError } from '../errors';
// This will be generated by Peggy
// eslint-disable-next-line import/extensions, @typescript-eslint/ban-ts-comment
// @ts-ignore - Generated file
import { parse as peggyParse } from './generated';
export function parse(expression) {
    return Effect.try({
        try: () => peggyParse(expression, {
            startRule: 'Expression',
        }),
        catch: (error) => {
            if (error && typeof error === 'object' && 'message' in error) {
                const err = error;
                return new ParseError({
                    message: err.message,
                    line: err.location?.start?.line,
                    column: err.location?.start?.column,
                    expected: err.expected,
                    found: err.found,
                });
            }
            return new ParseError({
                message: String(error),
            });
        },
    });
}
//# sourceMappingURL=index.js.map