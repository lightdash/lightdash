{
    "type": "object",
    "required": [
        "metadata",
        "nodes",
        "sources",
        "macros",
        "docs",
        "exposures",
        "metrics",
        "groups",
        "selectors",
        "semantic_models"
    ],
    "properties": {
        "metadata": {
            "$ref": "#/definitions/ManifestMetadata",
            "description": "Metadata about the manifest"
        },
        "nodes": {
            "type": "object",
            "additionalProperties": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/AnalysisNode"
                    },
                    {
                        "$ref": "#/definitions/SingularTestNode"
                    },
                    {
                        "$ref": "#/definitions/HookNode"
                    },
                    {
                        "$ref": "#/definitions/ModelNode"
                    },
                    {
                        "$ref": "#/definitions/RPCNode"
                    },
                    {
                        "$ref": "#/definitions/SqlNode"
                    },
                    {
                        "$ref": "#/definitions/GenericTestNode"
                    },
                    {
                        "$ref": "#/definitions/SnapshotNode"
                    },
                    {
                        "$ref": "#/definitions/SeedNode"
                    }
                ]
            },
            "description": "The nodes defined in the dbt project and its dependencies"
        },
        "sources": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/SourceDefinition"
            },
            "description": "The sources defined in the dbt project and its dependencies"
        },
        "macros": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/Macro"
            },
            "description": "The macros defined in the dbt project and its dependencies"
        },
        "docs": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/Documentation"
            },
            "description": "The docs defined in the dbt project and its dependencies"
        },
        "exposures": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/Exposure"
            },
            "description": "The exposures defined in the dbt project and its dependencies"
        },
        "metrics": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/Metric"
            },
            "description": "The metrics defined in the dbt project and its dependencies"
        },
        "groups": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/Group"
            },
            "description": "The groups defined in the dbt project"
        },
        "selectors": {
            "type": "object",
            "description": "The selectors defined in selectors.yml"
        },
        "disabled": {
            "oneOf": [
                {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/AnalysisNode"
                                },
                                {
                                    "$ref": "#/definitions/SingularTestNode"
                                },
                                {
                                    "$ref": "#/definitions/HookNode"
                                },
                                {
                                    "$ref": "#/definitions/ModelNode"
                                },
                                {
                                    "$ref": "#/definitions/RPCNode"
                                },
                                {
                                    "$ref": "#/definitions/SqlNode"
                                },
                                {
                                    "$ref": "#/definitions/GenericTestNode"
                                },
                                {
                                    "$ref": "#/definitions/SnapshotNode"
                                },
                                {
                                    "$ref": "#/definitions/SeedNode"
                                },
                                {
                                    "$ref": "#/definitions/SourceDefinition"
                                },
                                {
                                    "$ref": "#/definitions/Exposure"
                                },
                                {
                                    "$ref": "#/definitions/Metric"
                                },
                                {
                                    "$ref": "#/definitions/SemanticModel"
                                }
                            ]
                        }
                    }
                },
                {
                    "type": "null"
                }
            ],
            "description": "A mapping of the disabled nodes in the target"
        },
        "parent_map": {
            "oneOf": [
                {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                {
                    "type": "null"
                }
            ],
            "description": "A mapping from\u00a0child nodes to their dependencies"
        },
        "child_map": {
            "oneOf": [
                {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                {
                    "type": "null"
                }
            ],
            "description": "A mapping from parent nodes to their dependents"
        },
        "group_map": {
            "oneOf": [
                {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                {
                    "type": "null"
                }
            ],
            "description": "A mapping from group names to their nodes"
        },
        "semantic_models": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/SemanticModel"
            },
            "description": "The semantic models defined in the dbt project"
        }
    },
    "additionalProperties": false,
    "description": "WritableManifest(metadata: dbt.contracts.graph.manifest.ManifestMetadata, nodes: Mapping[str, Union[dbt.contracts.graph.nodes.AnalysisNode, dbt.contracts.graph.nodes.SingularTestNode, dbt.contracts.graph.nodes.HookNode, dbt.contracts.graph.nodes.ModelNode, dbt.contracts.graph.nodes.RPCNode, dbt.contracts.graph.nodes.SqlNode, dbt.contracts.graph.nodes.GenericTestNode, dbt.contracts.graph.nodes.SnapshotNode, dbt.contracts.graph.nodes.SeedNode]], sources: Mapping[str, dbt.contracts.graph.nodes.SourceDefinition], macros: Mapping[str, dbt.contracts.graph.nodes.Macro], docs: Mapping[str, dbt.contracts.graph.nodes.Documentation], exposures: Mapping[str, dbt.contracts.graph.nodes.Exposure], metrics: Mapping[str, dbt.contracts.graph.nodes.Metric], groups: Mapping[str, dbt.contracts.graph.nodes.Group], selectors: Mapping[str, Any], disabled: Union[Mapping[str, List[Union[dbt.contracts.graph.nodes.AnalysisNode, dbt.contracts.graph.nodes.SingularTestNode, dbt.contracts.graph.nodes.HookNode, dbt.contracts.graph.nodes.ModelNode, dbt.contracts.graph.nodes.RPCNode, dbt.contracts.graph.nodes.SqlNode, dbt.contracts.graph.nodes.GenericTestNode, dbt.contracts.graph.nodes.SnapshotNode, dbt.contracts.graph.nodes.SeedNode, dbt.contracts.graph.nodes.SourceDefinition, dbt.contracts.graph.nodes.Exposure, dbt.contracts.graph.nodes.Metric, dbt.contracts.graph.nodes.SemanticModel]]], NoneType], parent_map: Union[Dict[str, List[str]], NoneType], child_map: Union[Dict[str, List[str]], NoneType], group_map: Union[Dict[str, List[str]], NoneType], semantic_models: Mapping[str, dbt.contracts.graph.nodes.SemanticModel])",
    "definitions": {
        "ManifestMetadata": {
            "type": "object",
            "required": [],
            "properties": {
                "dbt_schema_version": {
                    "type": "string",
                    "default": "https://schemas.getdbt.com/dbt/manifest/v10.json"
                },
                "dbt_version": {
                    "type": "string",
                    "default": "1.6.5"
                },
                "generated_at": {
                    "type": "string",
                    "format": "date-time",
                    "default": "2023-10-05T00:33:14.410024Z"
                },
                "invocation_id": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": "603e2fae-9c7d-4d17-8530-7d28c9875263"
                },
                "env": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "default": {}
                },
                "project_name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Name of the root project"
                },
                "project_id": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "A unique identifier for the project, hashed from the project name"
                },
                "user_id": {
                    "oneOf": [
                        {
                            "type": "string",
                            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "A unique identifier for the user"
                },
                "send_anonymous_usage_stats": {
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Whether dbt is configured to send anonymous usage statistics"
                },
                "adapter_type": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The type name of the adapter"
                }
            },
            "additionalProperties": false,
            "description": "Metadata for the manifest."
        },
        "AnalysisNode": {
            "type": "object",
            "required": [
                "schema",
                "name",
                "resource_type",
                "package_name",
                "path",
                "original_file_path",
                "unique_id",
                "fqn",
                "alias",
                "checksum"
            ],
            "properties": {
                "database": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "schema": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string",
                    "enum": ["analysis"]
                },
                "package_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "original_file_path": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                },
                "fqn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "alias": {
                    "type": "string"
                },
                "checksum": {
                    "$ref": "#/definitions/FileHash"
                },
                "config": {
                    "$ref": "#/definitions/NodeConfig",
                    "default": {
                        "enabled": true,
                        "alias": null,
                        "schema": null,
                        "database": null,
                        "tags": [],
                        "meta": {},
                        "group": null,
                        "materialized": "view",
                        "incremental_strategy": null,
                        "persist_docs": {},
                        "quoting": {},
                        "column_types": {},
                        "full_refresh": null,
                        "unique_key": null,
                        "on_schema_change": "ignore",
                        "on_configuration_change": "apply",
                        "grants": {},
                        "packages": [],
                        "docs": {
                            "show": true,
                            "node_color": null
                        },
                        "contract": {
                            "enforced": false
                        },
                        "post-hook": [],
                        "pre-hook": []
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "description": {
                    "type": "string",
                    "default": ""
                },
                "columns": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ColumnInfo"
                    },
                    "default": {}
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "group": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "docs": {
                    "$ref": "#/definitions/Docs",
                    "default": {
                        "show": true,
                        "node_color": null
                    }
                },
                "patch_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "build_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "deferred": {
                    "type": "boolean",
                    "default": false
                },
                "unrendered_config": {
                    "type": "object",
                    "default": {}
                },
                "created_at": {
                    "type": "number",
                    "default": 1696465994.411958
                },
                "config_call_dict": {
                    "type": "object",
                    "default": {}
                },
                "relation_name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "raw_code": {
                    "type": "string",
                    "default": ""
                },
                "language": {
                    "type": "string",
                    "default": "sql"
                },
                "refs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RefArgs"
                    },
                    "default": []
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "depends_on": {
                    "$ref": "#/definitions/DependsOn",
                    "default": {
                        "macros": [],
                        "nodes": []
                    }
                },
                "compiled_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "compiled": {
                    "type": "boolean",
                    "default": false
                },
                "compiled_code": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "extra_ctes_injected": {
                    "type": "boolean",
                    "default": false
                },
                "extra_ctes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InjectedCTE"
                    },
                    "default": []
                },
                "contract": {
                    "$ref": "#/definitions/Contract",
                    "default": {
                        "enforced": false,
                        "checksum": null
                    }
                }
            },
            "additionalProperties": false,
            "description": "AnalysisNode(database: Union[str, NoneType], schema: str, name: str, resource_type: dbt.node_types.NodeType, package_name: str, path: str, original_file_path: str, unique_id: str, fqn: List[str], alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, _event_status: Dict[str, Any] = <factory>, tags: List[str] = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.nodes.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, group: Union[str, NoneType] = None, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, relation_name: Union[str, NoneType] = None, raw_code: str = '', language: str = 'sql', refs: List[dbt.contracts.graph.nodes.RefArgs] = <factory>, sources: List[List[str]] = <factory>, metrics: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.nodes.DependsOn = <factory>, compiled_path: Union[str, NoneType] = None, compiled: bool = False, compiled_code: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.nodes.InjectedCTE] = <factory>, _pre_injected_sql: Union[str, NoneType] = None, contract: dbt.contracts.graph.nodes.Contract = <factory>)"
        },
        "FileHash": {
            "type": "object",
            "required": ["name", "checksum"],
            "properties": {
                "name": {
                    "type": "string"
                },
                "checksum": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "description": "FileHash(name: str, checksum: str)"
        },
        "NodeConfig": {
            "type": "object",
            "required": [],
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": true
                },
                "alias": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "schema": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "database": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "tags": {
                    "oneOf": [
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "default": []
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "group": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "materialized": {
                    "type": "string",
                    "default": "view"
                },
                "incremental_strategy": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "persist_docs": {
                    "type": "object",
                    "default": {}
                },
                "post-hook": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Hook"
                    },
                    "default": []
                },
                "pre-hook": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Hook"
                    },
                    "default": []
                },
                "quoting": {
                    "type": "object",
                    "default": {}
                },
                "column_types": {
                    "type": "object",
                    "default": {}
                },
                "full_refresh": {
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "unique_key": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "on_schema_change": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": "ignore"
                },
                "on_configuration_change": {
                    "type": "string",
                    "enum": ["apply", "continue", "fail"],
                    "default": "apply"
                },
                "grants": {
                    "type": "object",
                    "default": {}
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "docs": {
                    "$ref": "#/definitions/Docs",
                    "default": {
                        "show": true,
                        "node_color": null
                    }
                },
                "contract": {
                    "$ref": "#/definitions/ContractConfig",
                    "default": {
                        "enforced": false
                    }
                }
            },
            "additionalProperties": true,
            "description": "NodeConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True, alias: Union[str, NoneType] = None, schema: Union[str, NoneType] = None, database: Union[str, NoneType] = None, tags: Union[List[str], str] = <factory>, meta: Dict[str, Any] = <factory>, group: Union[str, NoneType] = None, materialized: str = 'view', incremental_strategy: Union[str, NoneType] = None, persist_docs: Dict[str, Any] = <factory>, post_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, pre_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, quoting: Dict[str, Any] = <factory>, column_types: Dict[str, Any] = <factory>, full_refresh: Union[bool, NoneType] = None, unique_key: Union[str, List[str], NoneType] = None, on_schema_change: Union[str, NoneType] = 'ignore', on_configuration_change: dbt.contracts.graph.model_config.OnConfigurationChangeOption = <factory>, grants: Dict[str, Any] = <factory>, packages: List[str] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, contract: dbt.contracts.graph.model_config.ContractConfig = <factory>)"
        },
        "Hook": {
            "type": "object",
            "required": ["sql"],
            "properties": {
                "sql": {
                    "type": "string"
                },
                "transaction": {
                    "type": "boolean",
                    "default": true
                },
                "index": {
                    "oneOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "Hook(sql: str, transaction: bool = True, index: Union[int, NoneType] = None)"
        },
        "Docs": {
            "type": "object",
            "required": [],
            "properties": {
                "show": {
                    "type": "boolean",
                    "default": true
                },
                "node_color": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "Docs(show: bool = True, node_color: Union[str, NoneType] = None)"
        },
        "ContractConfig": {
            "type": "object",
            "required": [],
            "properties": {
                "enforced": {
                    "type": "boolean",
                    "default": false
                }
            },
            "additionalProperties": false,
            "description": "ContractConfig(enforced: bool = False)"
        },
        "ColumnInfo": {
            "type": "object",
            "required": ["name"],
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "default": ""
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "data_type": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "constraints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ColumnLevelConstraint"
                    },
                    "default": []
                },
                "quote": {
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                }
            },
            "additionalProperties": true,
            "description": "Used in all ManifestNodes and SourceDefinition"
        },
        "ColumnLevelConstraint": {
            "type": "object",
            "required": ["type"],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "check",
                        "not_null",
                        "unique",
                        "primary_key",
                        "foreign_key",
                        "custom"
                    ]
                },
                "name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "expression": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "warn_unenforced": {
                    "type": "boolean",
                    "default": true
                },
                "warn_unsupported": {
                    "type": "boolean",
                    "default": true
                }
            },
            "additionalProperties": false,
            "description": "ColumnLevelConstraint(type: dbt.contracts.graph.nodes.ConstraintType, name: Union[str, NoneType] = None, expression: Union[str, NoneType] = None, warn_unenforced: bool = True, warn_unsupported: bool = True)"
        },
        "RefArgs": {
            "type": "object",
            "required": ["name"],
            "properties": {
                "name": {
                    "type": "string"
                },
                "package": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "version": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "RefArgs(name: str, package: Union[str, NoneType] = None, version: Union[str, float, NoneType] = None)"
        },
        "DependsOn": {
            "type": "object",
            "required": [],
            "properties": {
                "macros": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                }
            },
            "additionalProperties": false,
            "description": "DependsOn(macros: List[str] = <factory>, nodes: List[str] = <factory>)"
        },
        "InjectedCTE": {
            "type": "object",
            "required": ["id", "sql"],
            "properties": {
                "id": {
                    "type": "string"
                },
                "sql": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "description": "Used in CompiledNodes as part of ephemeral model processing"
        },
        "Contract": {
            "type": "object",
            "required": [],
            "properties": {
                "enforced": {
                    "type": "boolean",
                    "default": false
                },
                "checksum": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "Contract(enforced: bool = False, checksum: Union[str, NoneType] = None)"
        },
        "SingularTestNode": {
            "type": "object",
            "required": [
                "schema",
                "name",
                "resource_type",
                "package_name",
                "path",
                "original_file_path",
                "unique_id",
                "fqn",
                "alias",
                "checksum"
            ],
            "properties": {
                "database": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "schema": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string",
                    "enum": ["test"]
                },
                "package_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "original_file_path": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                },
                "fqn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "alias": {
                    "type": "string"
                },
                "checksum": {
                    "$ref": "#/definitions/FileHash"
                },
                "config": {
                    "$ref": "#/definitions/TestConfig",
                    "default": {
                        "enabled": true,
                        "alias": null,
                        "schema": "dbt_test__audit",
                        "database": null,
                        "tags": [],
                        "meta": {},
                        "group": null,
                        "materialized": "test",
                        "severity": "ERROR",
                        "store_failures": null,
                        "where": null,
                        "limit": null,
                        "fail_calc": "count(*)",
                        "warn_if": "!= 0",
                        "error_if": "!= 0"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "description": {
                    "type": "string",
                    "default": ""
                },
                "columns": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ColumnInfo"
                    },
                    "default": {}
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "group": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "docs": {
                    "$ref": "#/definitions/Docs",
                    "default": {
                        "show": true,
                        "node_color": null
                    }
                },
                "patch_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "build_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "deferred": {
                    "type": "boolean",
                    "default": false
                },
                "unrendered_config": {
                    "type": "object",
                    "default": {}
                },
                "created_at": {
                    "type": "number",
                    "default": 1696465994.413604
                },
                "config_call_dict": {
                    "type": "object",
                    "default": {}
                },
                "relation_name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "raw_code": {
                    "type": "string",
                    "default": ""
                },
                "language": {
                    "type": "string",
                    "default": "sql"
                },
                "refs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RefArgs"
                    },
                    "default": []
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "depends_on": {
                    "$ref": "#/definitions/DependsOn",
                    "default": {
                        "macros": [],
                        "nodes": []
                    }
                },
                "compiled_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "compiled": {
                    "type": "boolean",
                    "default": false
                },
                "compiled_code": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "extra_ctes_injected": {
                    "type": "boolean",
                    "default": false
                },
                "extra_ctes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InjectedCTE"
                    },
                    "default": []
                },
                "contract": {
                    "$ref": "#/definitions/Contract",
                    "default": {
                        "enforced": false,
                        "checksum": null
                    }
                }
            },
            "additionalProperties": false,
            "description": "SingularTestNode(database: Union[str, NoneType], schema: str, name: str, resource_type: dbt.node_types.NodeType, package_name: str, path: str, original_file_path: str, unique_id: str, fqn: List[str], alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.TestConfig = <factory>, _event_status: Dict[str, Any] = <factory>, tags: List[str] = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.nodes.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, group: Union[str, NoneType] = None, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, relation_name: Union[str, NoneType] = None, raw_code: str = '', language: str = 'sql', refs: List[dbt.contracts.graph.nodes.RefArgs] = <factory>, sources: List[List[str]] = <factory>, metrics: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.nodes.DependsOn = <factory>, compiled_path: Union[str, NoneType] = None, compiled: bool = False, compiled_code: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.nodes.InjectedCTE] = <factory>, _pre_injected_sql: Union[str, NoneType] = None, contract: dbt.contracts.graph.nodes.Contract = <factory>)"
        },
        "TestConfig": {
            "type": "object",
            "required": [],
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": true
                },
                "alias": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "schema": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": "dbt_test__audit"
                },
                "database": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "tags": {
                    "oneOf": [
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "default": []
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "group": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "materialized": {
                    "type": "string",
                    "default": "test"
                },
                "severity": {
                    "type": "string",
                    "pattern": "^([Ww][Aa][Rr][Nn]|[Ee][Rr][Rr][Oo][Rr])$",
                    "default": "ERROR"
                },
                "store_failures": {
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "where": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "limit": {
                    "oneOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "fail_calc": {
                    "type": "string",
                    "default": "count(*)"
                },
                "warn_if": {
                    "type": "string",
                    "default": "!= 0"
                },
                "error_if": {
                    "type": "string",
                    "default": "!= 0"
                }
            },
            "additionalProperties": true,
            "description": "TestConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True, alias: Union[str, NoneType] = None, schema: Union[str, NoneType] = 'dbt_test__audit', database: Union[str, NoneType] = None, tags: Union[List[str], str] = <factory>, meta: Dict[str, Any] = <factory>, group: Union[str, NoneType] = None, materialized: str = 'test', severity: dbt.contracts.graph.model_config.Severity = 'ERROR', store_failures: Union[bool, NoneType] = None, where: Union[str, NoneType] = None, limit: Union[int, NoneType] = None, fail_calc: str = 'count(*)', warn_if: str = '!= 0', error_if: str = '!= 0')"
        },
        "HookNode": {
            "type": "object",
            "required": [
                "schema",
                "name",
                "resource_type",
                "package_name",
                "path",
                "original_file_path",
                "unique_id",
                "fqn",
                "alias",
                "checksum"
            ],
            "properties": {
                "database": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "schema": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string",
                    "enum": ["operation"]
                },
                "package_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "original_file_path": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                },
                "fqn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "alias": {
                    "type": "string"
                },
                "checksum": {
                    "$ref": "#/definitions/FileHash"
                },
                "config": {
                    "$ref": "#/definitions/NodeConfig",
                    "default": {
                        "enabled": true,
                        "alias": null,
                        "schema": null,
                        "database": null,
                        "tags": [],
                        "meta": {},
                        "group": null,
                        "materialized": "view",
                        "incremental_strategy": null,
                        "persist_docs": {},
                        "quoting": {},
                        "column_types": {},
                        "full_refresh": null,
                        "unique_key": null,
                        "on_schema_change": "ignore",
                        "on_configuration_change": "apply",
                        "grants": {},
                        "packages": [],
                        "docs": {
                            "show": true,
                            "node_color": null
                        },
                        "contract": {
                            "enforced": false
                        },
                        "post-hook": [],
                        "pre-hook": []
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "description": {
                    "type": "string",
                    "default": ""
                },
                "columns": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ColumnInfo"
                    },
                    "default": {}
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "group": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "docs": {
                    "$ref": "#/definitions/Docs",
                    "default": {
                        "show": true,
                        "node_color": null
                    }
                },
                "patch_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "build_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "deferred": {
                    "type": "boolean",
                    "default": false
                },
                "unrendered_config": {
                    "type": "object",
                    "default": {}
                },
                "created_at": {
                    "type": "number",
                    "default": 1696465994.414359
                },
                "config_call_dict": {
                    "type": "object",
                    "default": {}
                },
                "relation_name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "raw_code": {
                    "type": "string",
                    "default": ""
                },
                "language": {
                    "type": "string",
                    "default": "sql"
                },
                "refs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RefArgs"
                    },
                    "default": []
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "depends_on": {
                    "$ref": "#/definitions/DependsOn",
                    "default": {
                        "macros": [],
                        "nodes": []
                    }
                },
                "compiled_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "compiled": {
                    "type": "boolean",
                    "default": false
                },
                "compiled_code": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "extra_ctes_injected": {
                    "type": "boolean",
                    "default": false
                },
                "extra_ctes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InjectedCTE"
                    },
                    "default": []
                },
                "contract": {
                    "$ref": "#/definitions/Contract",
                    "default": {
                        "enforced": false,
                        "checksum": null
                    }
                },
                "index": {
                    "oneOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "HookNode(database: Union[str, NoneType], schema: str, name: str, resource_type: dbt.node_types.NodeType, package_name: str, path: str, original_file_path: str, unique_id: str, fqn: List[str], alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, _event_status: Dict[str, Any] = <factory>, tags: List[str] = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.nodes.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, group: Union[str, NoneType] = None, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, relation_name: Union[str, NoneType] = None, raw_code: str = '', language: str = 'sql', refs: List[dbt.contracts.graph.nodes.RefArgs] = <factory>, sources: List[List[str]] = <factory>, metrics: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.nodes.DependsOn = <factory>, compiled_path: Union[str, NoneType] = None, compiled: bool = False, compiled_code: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.nodes.InjectedCTE] = <factory>, _pre_injected_sql: Union[str, NoneType] = None, contract: dbt.contracts.graph.nodes.Contract = <factory>, index: Union[int, NoneType] = None)"
        },
        "ModelNode": {
            "type": "object",
            "required": [
                "schema",
                "name",
                "resource_type",
                "package_name",
                "path",
                "original_file_path",
                "unique_id",
                "fqn",
                "alias",
                "checksum"
            ],
            "properties": {
                "database": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "schema": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string",
                    "enum": ["model"]
                },
                "package_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "original_file_path": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                },
                "fqn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "alias": {
                    "type": "string"
                },
                "checksum": {
                    "$ref": "#/definitions/FileHash"
                },
                "config": {
                    "$ref": "#/definitions/NodeConfig",
                    "default": {
                        "enabled": true,
                        "alias": null,
                        "schema": null,
                        "database": null,
                        "tags": [],
                        "meta": {},
                        "group": null,
                        "materialized": "view",
                        "incremental_strategy": null,
                        "persist_docs": {},
                        "quoting": {},
                        "column_types": {},
                        "full_refresh": null,
                        "unique_key": null,
                        "on_schema_change": "ignore",
                        "on_configuration_change": "apply",
                        "grants": {},
                        "packages": [],
                        "docs": {
                            "show": true,
                            "node_color": null
                        },
                        "contract": {
                            "enforced": false
                        },
                        "post-hook": [],
                        "pre-hook": []
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "description": {
                    "type": "string",
                    "default": ""
                },
                "columns": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ColumnInfo"
                    },
                    "default": {}
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "group": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "docs": {
                    "$ref": "#/definitions/Docs",
                    "default": {
                        "show": true,
                        "node_color": null
                    }
                },
                "patch_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "build_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "deferred": {
                    "type": "boolean",
                    "default": false
                },
                "unrendered_config": {
                    "type": "object",
                    "default": {}
                },
                "created_at": {
                    "type": "number",
                    "default": 1696465994.4150689
                },
                "config_call_dict": {
                    "type": "object",
                    "default": {}
                },
                "relation_name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "raw_code": {
                    "type": "string",
                    "default": ""
                },
                "language": {
                    "type": "string",
                    "default": "sql"
                },
                "refs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RefArgs"
                    },
                    "default": []
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "depends_on": {
                    "$ref": "#/definitions/DependsOn",
                    "default": {
                        "macros": [],
                        "nodes": []
                    }
                },
                "compiled_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "compiled": {
                    "type": "boolean",
                    "default": false
                },
                "compiled_code": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "extra_ctes_injected": {
                    "type": "boolean",
                    "default": false
                },
                "extra_ctes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InjectedCTE"
                    },
                    "default": []
                },
                "contract": {
                    "$ref": "#/definitions/Contract",
                    "default": {
                        "enforced": false,
                        "checksum": null
                    }
                },
                "access": {
                    "type": "string",
                    "enum": ["private", "protected", "public"],
                    "default": "protected"
                },
                "constraints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ModelLevelConstraint"
                    },
                    "default": []
                },
                "version": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "latest_version": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "deprecation_date": {
                    "oneOf": [
                        {
                            "type": "string",
                            "format": "date-time"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "defer_relation": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/DeferRelation"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "ModelNode(database: Union[str, NoneType], schema: str, name: str, resource_type: dbt.node_types.NodeType, package_name: str, path: str, original_file_path: str, unique_id: str, fqn: List[str], alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, _event_status: Dict[str, Any] = <factory>, tags: List[str] = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.nodes.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, group: Union[str, NoneType] = None, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, relation_name: Union[str, NoneType] = None, raw_code: str = '', language: str = 'sql', refs: List[dbt.contracts.graph.nodes.RefArgs] = <factory>, sources: List[List[str]] = <factory>, metrics: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.nodes.DependsOn = <factory>, compiled_path: Union[str, NoneType] = None, compiled: bool = False, compiled_code: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.nodes.InjectedCTE] = <factory>, _pre_injected_sql: Union[str, NoneType] = None, contract: dbt.contracts.graph.nodes.Contract = <factory>, access: dbt.node_types.AccessType = <AccessType.Protected: 'protected'>, constraints: List[dbt.contracts.graph.nodes.ModelLevelConstraint] = <factory>, version: Union[str, float, NoneType] = None, latest_version: Union[str, float, NoneType] = None, deprecation_date: Union[datetime.datetime, NoneType] = None, defer_relation: Union[dbt.contracts.graph.nodes.DeferRelation, NoneType] = None)"
        },
        "ModelLevelConstraint": {
            "type": "object",
            "required": ["type"],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "check",
                        "not_null",
                        "unique",
                        "primary_key",
                        "foreign_key",
                        "custom"
                    ]
                },
                "name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "expression": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "warn_unenforced": {
                    "type": "boolean",
                    "default": true
                },
                "warn_unsupported": {
                    "type": "boolean",
                    "default": true
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                }
            },
            "additionalProperties": false,
            "description": "ModelLevelConstraint(type: dbt.contracts.graph.nodes.ConstraintType, name: Union[str, NoneType] = None, expression: Union[str, NoneType] = None, warn_unenforced: bool = True, warn_unsupported: bool = True, columns: List[str] = <factory>)"
        },
        "DeferRelation": {
            "type": "object",
            "required": ["schema", "alias"],
            "properties": {
                "database": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "schema": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "relation_name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "DeferRelation(database: Union[str, NoneType], schema: str, alias: str, relation_name: Union[str, NoneType])"
        },
        "RPCNode": {
            "type": "object",
            "required": [
                "schema",
                "name",
                "resource_type",
                "package_name",
                "path",
                "original_file_path",
                "unique_id",
                "fqn",
                "alias",
                "checksum"
            ],
            "properties": {
                "database": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "schema": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string",
                    "enum": ["rpc"]
                },
                "package_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "original_file_path": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                },
                "fqn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "alias": {
                    "type": "string"
                },
                "checksum": {
                    "$ref": "#/definitions/FileHash"
                },
                "config": {
                    "$ref": "#/definitions/NodeConfig",
                    "default": {
                        "enabled": true,
                        "alias": null,
                        "schema": null,
                        "database": null,
                        "tags": [],
                        "meta": {},
                        "group": null,
                        "materialized": "view",
                        "incremental_strategy": null,
                        "persist_docs": {},
                        "quoting": {},
                        "column_types": {},
                        "full_refresh": null,
                        "unique_key": null,
                        "on_schema_change": "ignore",
                        "on_configuration_change": "apply",
                        "grants": {},
                        "packages": [],
                        "docs": {
                            "show": true,
                            "node_color": null
                        },
                        "contract": {
                            "enforced": false
                        },
                        "post-hook": [],
                        "pre-hook": []
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "description": {
                    "type": "string",
                    "default": ""
                },
                "columns": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ColumnInfo"
                    },
                    "default": {}
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "group": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "docs": {
                    "$ref": "#/definitions/Docs",
                    "default": {
                        "show": true,
                        "node_color": null
                    }
                },
                "patch_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "build_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "deferred": {
                    "type": "boolean",
                    "default": false
                },
                "unrendered_config": {
                    "type": "object",
                    "default": {}
                },
                "created_at": {
                    "type": "number",
                    "default": 1696465994.416128
                },
                "config_call_dict": {
                    "type": "object",
                    "default": {}
                },
                "relation_name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "raw_code": {
                    "type": "string",
                    "default": ""
                },
                "language": {
                    "type": "string",
                    "default": "sql"
                },
                "refs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RefArgs"
                    },
                    "default": []
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "depends_on": {
                    "$ref": "#/definitions/DependsOn",
                    "default": {
                        "macros": [],
                        "nodes": []
                    }
                },
                "compiled_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "compiled": {
                    "type": "boolean",
                    "default": false
                },
                "compiled_code": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "extra_ctes_injected": {
                    "type": "boolean",
                    "default": false
                },
                "extra_ctes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InjectedCTE"
                    },
                    "default": []
                },
                "contract": {
                    "$ref": "#/definitions/Contract",
                    "default": {
                        "enforced": false,
                        "checksum": null
                    }
                }
            },
            "additionalProperties": false,
            "description": "RPCNode(database: Union[str, NoneType], schema: str, name: str, resource_type: dbt.node_types.NodeType, package_name: str, path: str, original_file_path: str, unique_id: str, fqn: List[str], alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, _event_status: Dict[str, Any] = <factory>, tags: List[str] = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.nodes.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, group: Union[str, NoneType] = None, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, relation_name: Union[str, NoneType] = None, raw_code: str = '', language: str = 'sql', refs: List[dbt.contracts.graph.nodes.RefArgs] = <factory>, sources: List[List[str]] = <factory>, metrics: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.nodes.DependsOn = <factory>, compiled_path: Union[str, NoneType] = None, compiled: bool = False, compiled_code: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.nodes.InjectedCTE] = <factory>, _pre_injected_sql: Union[str, NoneType] = None, contract: dbt.contracts.graph.nodes.Contract = <factory>)"
        },
        "SqlNode": {
            "type": "object",
            "required": [
                "schema",
                "name",
                "resource_type",
                "package_name",
                "path",
                "original_file_path",
                "unique_id",
                "fqn",
                "alias",
                "checksum"
            ],
            "properties": {
                "database": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "schema": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string",
                    "enum": ["sql_operation"]
                },
                "package_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "original_file_path": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                },
                "fqn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "alias": {
                    "type": "string"
                },
                "checksum": {
                    "$ref": "#/definitions/FileHash"
                },
                "config": {
                    "$ref": "#/definitions/NodeConfig",
                    "default": {
                        "enabled": true,
                        "alias": null,
                        "schema": null,
                        "database": null,
                        "tags": [],
                        "meta": {},
                        "group": null,
                        "materialized": "view",
                        "incremental_strategy": null,
                        "persist_docs": {},
                        "quoting": {},
                        "column_types": {},
                        "full_refresh": null,
                        "unique_key": null,
                        "on_schema_change": "ignore",
                        "on_configuration_change": "apply",
                        "grants": {},
                        "packages": [],
                        "docs": {
                            "show": true,
                            "node_color": null
                        },
                        "contract": {
                            "enforced": false
                        },
                        "post-hook": [],
                        "pre-hook": []
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "description": {
                    "type": "string",
                    "default": ""
                },
                "columns": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ColumnInfo"
                    },
                    "default": {}
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "group": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "docs": {
                    "$ref": "#/definitions/Docs",
                    "default": {
                        "show": true,
                        "node_color": null
                    }
                },
                "patch_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "build_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "deferred": {
                    "type": "boolean",
                    "default": false
                },
                "unrendered_config": {
                    "type": "object",
                    "default": {}
                },
                "created_at": {
                    "type": "number",
                    "default": 1696465994.41679
                },
                "config_call_dict": {
                    "type": "object",
                    "default": {}
                },
                "relation_name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "raw_code": {
                    "type": "string",
                    "default": ""
                },
                "language": {
                    "type": "string",
                    "default": "sql"
                },
                "refs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RefArgs"
                    },
                    "default": []
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "depends_on": {
                    "$ref": "#/definitions/DependsOn",
                    "default": {
                        "macros": [],
                        "nodes": []
                    }
                },
                "compiled_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "compiled": {
                    "type": "boolean",
                    "default": false
                },
                "compiled_code": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "extra_ctes_injected": {
                    "type": "boolean",
                    "default": false
                },
                "extra_ctes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InjectedCTE"
                    },
                    "default": []
                },
                "contract": {
                    "$ref": "#/definitions/Contract",
                    "default": {
                        "enforced": false,
                        "checksum": null
                    }
                }
            },
            "additionalProperties": false,
            "description": "SqlNode(database: Union[str, NoneType], schema: str, name: str, resource_type: dbt.node_types.NodeType, package_name: str, path: str, original_file_path: str, unique_id: str, fqn: List[str], alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, _event_status: Dict[str, Any] = <factory>, tags: List[str] = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.nodes.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, group: Union[str, NoneType] = None, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, relation_name: Union[str, NoneType] = None, raw_code: str = '', language: str = 'sql', refs: List[dbt.contracts.graph.nodes.RefArgs] = <factory>, sources: List[List[str]] = <factory>, metrics: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.nodes.DependsOn = <factory>, compiled_path: Union[str, NoneType] = None, compiled: bool = False, compiled_code: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.nodes.InjectedCTE] = <factory>, _pre_injected_sql: Union[str, NoneType] = None, contract: dbt.contracts.graph.nodes.Contract = <factory>)"
        },
        "GenericTestNode": {
            "type": "object",
            "required": [
                "test_metadata",
                "schema",
                "name",
                "resource_type",
                "package_name",
                "path",
                "original_file_path",
                "unique_id",
                "fqn",
                "alias",
                "checksum"
            ],
            "properties": {
                "test_metadata": {
                    "$ref": "#/definitions/TestMetadata"
                },
                "database": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "schema": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string",
                    "enum": ["test"]
                },
                "package_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "original_file_path": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                },
                "fqn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "alias": {
                    "type": "string"
                },
                "checksum": {
                    "$ref": "#/definitions/FileHash"
                },
                "config": {
                    "$ref": "#/definitions/TestConfig",
                    "default": {
                        "enabled": true,
                        "alias": null,
                        "schema": "dbt_test__audit",
                        "database": null,
                        "tags": [],
                        "meta": {},
                        "group": null,
                        "materialized": "test",
                        "severity": "ERROR",
                        "store_failures": null,
                        "where": null,
                        "limit": null,
                        "fail_calc": "count(*)",
                        "warn_if": "!= 0",
                        "error_if": "!= 0"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "description": {
                    "type": "string",
                    "default": ""
                },
                "columns": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ColumnInfo"
                    },
                    "default": {}
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "group": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "docs": {
                    "$ref": "#/definitions/Docs",
                    "default": {
                        "show": true,
                        "node_color": null
                    }
                },
                "patch_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "build_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "deferred": {
                    "type": "boolean",
                    "default": false
                },
                "unrendered_config": {
                    "type": "object",
                    "default": {}
                },
                "created_at": {
                    "type": "number",
                    "default": 1696465994.4175282
                },
                "config_call_dict": {
                    "type": "object",
                    "default": {}
                },
                "relation_name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "raw_code": {
                    "type": "string",
                    "default": ""
                },
                "language": {
                    "type": "string",
                    "default": "sql"
                },
                "refs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RefArgs"
                    },
                    "default": []
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "depends_on": {
                    "$ref": "#/definitions/DependsOn",
                    "default": {
                        "macros": [],
                        "nodes": []
                    }
                },
                "compiled_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "compiled": {
                    "type": "boolean",
                    "default": false
                },
                "compiled_code": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "extra_ctes_injected": {
                    "type": "boolean",
                    "default": false
                },
                "extra_ctes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InjectedCTE"
                    },
                    "default": []
                },
                "contract": {
                    "$ref": "#/definitions/Contract",
                    "default": {
                        "enforced": false,
                        "checksum": null
                    }
                },
                "column_name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "file_key_name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "attached_node": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "GenericTestNode(test_metadata: dbt.contracts.graph.nodes.TestMetadata, database: Union[str, NoneType], schema: str, name: str, resource_type: dbt.node_types.NodeType, package_name: str, path: str, original_file_path: str, unique_id: str, fqn: List[str], alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.TestConfig = <factory>, _event_status: Dict[str, Any] = <factory>, tags: List[str] = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.nodes.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, group: Union[str, NoneType] = None, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, relation_name: Union[str, NoneType] = None, raw_code: str = '', language: str = 'sql', refs: List[dbt.contracts.graph.nodes.RefArgs] = <factory>, sources: List[List[str]] = <factory>, metrics: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.nodes.DependsOn = <factory>, compiled_path: Union[str, NoneType] = None, compiled: bool = False, compiled_code: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.nodes.InjectedCTE] = <factory>, _pre_injected_sql: Union[str, NoneType] = None, contract: dbt.contracts.graph.nodes.Contract = <factory>, column_name: Union[str, NoneType] = None, file_key_name: Union[str, NoneType] = None, attached_node: Union[str, NoneType] = None)"
        },
        "TestMetadata": {
            "type": "object",
            "required": ["name"],
            "properties": {
                "name": {
                    "type": "string"
                },
                "kwargs": {
                    "type": "object",
                    "default": {}
                },
                "namespace": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "TestMetadata(name: str, kwargs: Dict[str, Any] = <factory>, namespace: Union[str, NoneType] = None)"
        },
        "SnapshotNode": {
            "type": "object",
            "required": [
                "schema",
                "name",
                "resource_type",
                "package_name",
                "path",
                "original_file_path",
                "unique_id",
                "fqn",
                "alias",
                "checksum",
                "config"
            ],
            "properties": {
                "database": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "schema": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string",
                    "enum": ["snapshot"]
                },
                "package_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "original_file_path": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                },
                "fqn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "alias": {
                    "type": "string"
                },
                "checksum": {
                    "$ref": "#/definitions/FileHash"
                },
                "config": {
                    "$ref": "#/definitions/SnapshotConfig"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "description": {
                    "type": "string",
                    "default": ""
                },
                "columns": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ColumnInfo"
                    },
                    "default": {}
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "group": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "docs": {
                    "$ref": "#/definitions/Docs",
                    "default": {
                        "show": true,
                        "node_color": null
                    }
                },
                "patch_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "build_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "deferred": {
                    "type": "boolean",
                    "default": false
                },
                "unrendered_config": {
                    "type": "object",
                    "default": {}
                },
                "created_at": {
                    "type": "number",
                    "default": 1696465994.418854
                },
                "config_call_dict": {
                    "type": "object",
                    "default": {}
                },
                "relation_name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "raw_code": {
                    "type": "string",
                    "default": ""
                },
                "language": {
                    "type": "string",
                    "default": "sql"
                },
                "refs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RefArgs"
                    },
                    "default": []
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "depends_on": {
                    "$ref": "#/definitions/DependsOn",
                    "default": {
                        "macros": [],
                        "nodes": []
                    }
                },
                "compiled_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "compiled": {
                    "type": "boolean",
                    "default": false
                },
                "compiled_code": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "extra_ctes_injected": {
                    "type": "boolean",
                    "default": false
                },
                "extra_ctes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InjectedCTE"
                    },
                    "default": []
                },
                "contract": {
                    "$ref": "#/definitions/Contract",
                    "default": {
                        "enforced": false,
                        "checksum": null
                    }
                },
                "defer_relation": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/DeferRelation"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "SnapshotNode(database: Union[str, NoneType], schema: str, name: str, resource_type: dbt.node_types.NodeType, package_name: str, path: str, original_file_path: str, unique_id: str, fqn: List[str], alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.SnapshotConfig, _event_status: Dict[str, Any] = <factory>, tags: List[str] = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.nodes.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, group: Union[str, NoneType] = None, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, relation_name: Union[str, NoneType] = None, raw_code: str = '', language: str = 'sql', refs: List[dbt.contracts.graph.nodes.RefArgs] = <factory>, sources: List[List[str]] = <factory>, metrics: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.nodes.DependsOn = <factory>, compiled_path: Union[str, NoneType] = None, compiled: bool = False, compiled_code: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.nodes.InjectedCTE] = <factory>, _pre_injected_sql: Union[str, NoneType] = None, contract: dbt.contracts.graph.nodes.Contract = <factory>, defer_relation: Union[dbt.contracts.graph.nodes.DeferRelation, NoneType] = None)"
        },
        "SnapshotConfig": {
            "type": "object",
            "required": [],
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": true
                },
                "alias": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "schema": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "database": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "tags": {
                    "oneOf": [
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "default": []
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "group": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "materialized": {
                    "type": "string",
                    "default": "snapshot"
                },
                "incremental_strategy": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "persist_docs": {
                    "type": "object",
                    "default": {}
                },
                "post-hook": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Hook"
                    },
                    "default": []
                },
                "pre-hook": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Hook"
                    },
                    "default": []
                },
                "quoting": {
                    "type": "object",
                    "default": {}
                },
                "column_types": {
                    "type": "object",
                    "default": {}
                },
                "full_refresh": {
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "unique_key": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "on_schema_change": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": "ignore"
                },
                "on_configuration_change": {
                    "type": "string",
                    "enum": ["apply", "continue", "fail"],
                    "default": "apply"
                },
                "grants": {
                    "type": "object",
                    "default": {}
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "docs": {
                    "$ref": "#/definitions/Docs",
                    "default": {
                        "show": true,
                        "node_color": null
                    }
                },
                "contract": {
                    "$ref": "#/definitions/ContractConfig",
                    "default": {
                        "enforced": false
                    }
                },
                "strategy": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "target_schema": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "target_database": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "updated_at": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "check_cols": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": true,
            "description": "SnapshotConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True, alias: Union[str, NoneType] = None, schema: Union[str, NoneType] = None, database: Union[str, NoneType] = None, tags: Union[List[str], str] = <factory>, meta: Dict[str, Any] = <factory>, group: Union[str, NoneType] = None, materialized: str = 'snapshot', incremental_strategy: Union[str, NoneType] = None, persist_docs: Dict[str, Any] = <factory>, post_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, pre_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, quoting: Dict[str, Any] = <factory>, column_types: Dict[str, Any] = <factory>, full_refresh: Union[bool, NoneType] = None, unique_key: Union[str, NoneType] = None, on_schema_change: Union[str, NoneType] = 'ignore', on_configuration_change: dbt.contracts.graph.model_config.OnConfigurationChangeOption = <factory>, grants: Dict[str, Any] = <factory>, packages: List[str] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, contract: dbt.contracts.graph.model_config.ContractConfig = <factory>, strategy: Union[str, NoneType] = None, target_schema: Union[str, NoneType] = None, target_database: Union[str, NoneType] = None, updated_at: Union[str, NoneType] = None, check_cols: Union[str, List[str], NoneType] = None)"
        },
        "SeedNode": {
            "type": "object",
            "required": [
                "schema",
                "name",
                "resource_type",
                "package_name",
                "path",
                "original_file_path",
                "unique_id",
                "fqn",
                "alias",
                "checksum"
            ],
            "properties": {
                "database": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "schema": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string",
                    "enum": ["seed"]
                },
                "package_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "original_file_path": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                },
                "fqn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "alias": {
                    "type": "string"
                },
                "checksum": {
                    "$ref": "#/definitions/FileHash"
                },
                "config": {
                    "$ref": "#/definitions/SeedConfig",
                    "default": {
                        "enabled": true,
                        "alias": null,
                        "schema": null,
                        "database": null,
                        "tags": [],
                        "meta": {},
                        "group": null,
                        "materialized": "seed",
                        "incremental_strategy": null,
                        "persist_docs": {},
                        "quoting": {},
                        "column_types": {},
                        "full_refresh": null,
                        "unique_key": null,
                        "on_schema_change": "ignore",
                        "on_configuration_change": "apply",
                        "grants": {},
                        "packages": [],
                        "docs": {
                            "show": true,
                            "node_color": null
                        },
                        "contract": {
                            "enforced": false
                        },
                        "quote_columns": null,
                        "post-hook": [],
                        "pre-hook": []
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "description": {
                    "type": "string",
                    "default": ""
                },
                "columns": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ColumnInfo"
                    },
                    "default": {}
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "group": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "docs": {
                    "$ref": "#/definitions/Docs",
                    "default": {
                        "show": true,
                        "node_color": null
                    }
                },
                "patch_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "build_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "deferred": {
                    "type": "boolean",
                    "default": false
                },
                "unrendered_config": {
                    "type": "object",
                    "default": {}
                },
                "created_at": {
                    "type": "number",
                    "default": 1696465994.420199
                },
                "config_call_dict": {
                    "type": "object",
                    "default": {}
                },
                "relation_name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "raw_code": {
                    "type": "string",
                    "default": ""
                },
                "root_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "depends_on": {
                    "$ref": "#/definitions/MacroDependsOn",
                    "default": {
                        "macros": []
                    }
                },
                "defer_relation": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/DeferRelation"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "SeedNode(database: Union[str, NoneType], schema: str, name: str, resource_type: dbt.node_types.NodeType, package_name: str, path: str, original_file_path: str, unique_id: str, fqn: List[str], alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.SeedConfig = <factory>, _event_status: Dict[str, Any] = <factory>, tags: List[str] = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.nodes.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, group: Union[str, NoneType] = None, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, relation_name: Union[str, NoneType] = None, raw_code: str = '', root_path: Union[str, NoneType] = None, depends_on: dbt.contracts.graph.nodes.MacroDependsOn = <factory>, defer_relation: Union[dbt.contracts.graph.nodes.DeferRelation, NoneType] = None)"
        },
        "SeedConfig": {
            "type": "object",
            "required": [],
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": true
                },
                "alias": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "schema": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "database": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "tags": {
                    "oneOf": [
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "default": []
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "group": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "materialized": {
                    "type": "string",
                    "default": "seed"
                },
                "incremental_strategy": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "persist_docs": {
                    "type": "object",
                    "default": {}
                },
                "post-hook": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Hook"
                    },
                    "default": []
                },
                "pre-hook": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Hook"
                    },
                    "default": []
                },
                "quoting": {
                    "type": "object",
                    "default": {}
                },
                "column_types": {
                    "type": "object",
                    "default": {}
                },
                "full_refresh": {
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "unique_key": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "on_schema_change": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": "ignore"
                },
                "on_configuration_change": {
                    "type": "string",
                    "enum": ["apply", "continue", "fail"],
                    "default": "apply"
                },
                "grants": {
                    "type": "object",
                    "default": {}
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "docs": {
                    "$ref": "#/definitions/Docs",
                    "default": {
                        "show": true,
                        "node_color": null
                    }
                },
                "contract": {
                    "$ref": "#/definitions/ContractConfig",
                    "default": {
                        "enforced": false
                    }
                },
                "quote_columns": {
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": true,
            "description": "SeedConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True, alias: Union[str, NoneType] = None, schema: Union[str, NoneType] = None, database: Union[str, NoneType] = None, tags: Union[List[str], str] = <factory>, meta: Dict[str, Any] = <factory>, group: Union[str, NoneType] = None, materialized: str = 'seed', incremental_strategy: Union[str, NoneType] = None, persist_docs: Dict[str, Any] = <factory>, post_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, pre_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, quoting: Dict[str, Any] = <factory>, column_types: Dict[str, Any] = <factory>, full_refresh: Union[bool, NoneType] = None, unique_key: Union[str, List[str], NoneType] = None, on_schema_change: Union[str, NoneType] = 'ignore', on_configuration_change: dbt.contracts.graph.model_config.OnConfigurationChangeOption = <factory>, grants: Dict[str, Any] = <factory>, packages: List[str] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, contract: dbt.contracts.graph.model_config.ContractConfig = <factory>, quote_columns: Union[bool, NoneType] = None)"
        },
        "MacroDependsOn": {
            "type": "object",
            "required": [],
            "properties": {
                "macros": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                }
            },
            "additionalProperties": false,
            "description": "Used only in the Macro class"
        },
        "SourceDefinition": {
            "type": "object",
            "required": [
                "schema",
                "name",
                "resource_type",
                "package_name",
                "path",
                "original_file_path",
                "unique_id",
                "fqn",
                "source_name",
                "source_description",
                "loader",
                "identifier"
            ],
            "properties": {
                "database": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "schema": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string",
                    "enum": ["source"]
                },
                "package_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "original_file_path": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                },
                "fqn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source_name": {
                    "type": "string"
                },
                "source_description": {
                    "type": "string"
                },
                "loader": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "quoting": {
                    "$ref": "#/definitions/Quoting",
                    "default": {
                        "database": null,
                        "schema": null,
                        "identifier": null,
                        "column": null
                    }
                },
                "loaded_at_field": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "freshness": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/FreshnessThreshold"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "external": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/ExternalTable"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "description": {
                    "type": "string",
                    "default": ""
                },
                "columns": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ColumnInfo"
                    },
                    "default": {}
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "source_meta": {
                    "type": "object",
                    "default": {}
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "config": {
                    "$ref": "#/definitions/SourceConfig",
                    "default": {
                        "enabled": true
                    }
                },
                "patch_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "unrendered_config": {
                    "type": "object",
                    "default": {}
                },
                "relation_name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "created_at": {
                    "type": "number",
                    "default": 1696465994.421661
                }
            },
            "additionalProperties": false,
            "description": "SourceDefinition(database: Union[str, NoneType], schema: str, name: str, resource_type: dbt.node_types.NodeType, package_name: str, path: str, original_file_path: str, unique_id: str, fqn: List[str], source_name: str, source_description: str, loader: str, identifier: str, _event_status: Dict[str, Any] = <factory>, quoting: dbt.contracts.graph.unparsed.Quoting = <factory>, loaded_at_field: Union[str, NoneType] = None, freshness: Union[dbt.contracts.graph.unparsed.FreshnessThreshold, NoneType] = None, external: Union[dbt.contracts.graph.unparsed.ExternalTable, NoneType] = None, description: str = '', columns: Dict[str, dbt.contracts.graph.nodes.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, source_meta: Dict[str, Any] = <factory>, tags: List[str] = <factory>, config: dbt.contracts.graph.model_config.SourceConfig = <factory>, patch_path: Union[str, NoneType] = None, unrendered_config: Dict[str, Any] = <factory>, relation_name: Union[str, NoneType] = None, created_at: float = <factory>)"
        },
        "Quoting": {
            "type": "object",
            "required": [],
            "properties": {
                "database": {
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "schema": {
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "identifier": {
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "column": {
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "Quoting(database: Union[bool, NoneType] = None, schema: Union[bool, NoneType] = None, identifier: Union[bool, NoneType] = None, column: Union[bool, NoneType] = None)"
        },
        "FreshnessThreshold": {
            "type": "object",
            "required": [],
            "properties": {
                "warn_after": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Time"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": {
                        "count": null,
                        "period": null
                    }
                },
                "error_after": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Time"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": {
                        "count": null,
                        "period": null
                    }
                },
                "filter": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "FreshnessThreshold(warn_after: Union[dbt.contracts.graph.unparsed.Time, NoneType] = <factory>, error_after: Union[dbt.contracts.graph.unparsed.Time, NoneType] = <factory>, filter: Union[str, NoneType] = None)"
        },
        "Time": {
            "type": "object",
            "required": [],
            "properties": {
                "count": {
                    "oneOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "period": {
                    "oneOf": [
                        {
                            "type": "string",
                            "enum": ["minute", "hour", "day"]
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "Time(count: Union[int, NoneType] = None, period: Union[dbt.contracts.graph.unparsed.TimePeriod, NoneType] = None)"
        },
        "ExternalTable": {
            "type": "object",
            "required": [],
            "properties": {
                "location": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "file_format": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "row_format": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "tbl_properties": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "partitions": {
                    "oneOf": [
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExternalPartition"
                            }
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": true,
            "description": "ExternalTable(_extra: Dict[str, Any] = <factory>, location: Union[str, NoneType] = None, file_format: Union[str, NoneType] = None, row_format: Union[str, NoneType] = None, tbl_properties: Union[str, NoneType] = None, partitions: Union[List[str], List[dbt.contracts.graph.unparsed.ExternalPartition], NoneType] = None)"
        },
        "ExternalPartition": {
            "type": "object",
            "required": [],
            "properties": {
                "name": {
                    "type": "string",
                    "default": ""
                },
                "description": {
                    "type": "string",
                    "default": ""
                },
                "data_type": {
                    "type": "string",
                    "default": ""
                },
                "meta": {
                    "type": "object",
                    "default": {}
                }
            },
            "additionalProperties": true,
            "description": "ExternalPartition(_extra: Dict[str, Any] = <factory>, name: str = '', description: str = '', data_type: str = '', meta: Dict[str, Any] = <factory>)"
        },
        "SourceConfig": {
            "type": "object",
            "required": [],
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": true
                }
            },
            "additionalProperties": true,
            "description": "SourceConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True)"
        },
        "Macro": {
            "type": "object",
            "required": [
                "name",
                "resource_type",
                "package_name",
                "path",
                "original_file_path",
                "unique_id",
                "macro_sql"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string",
                    "enum": ["macro"]
                },
                "package_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "original_file_path": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                },
                "macro_sql": {
                    "type": "string"
                },
                "depends_on": {
                    "$ref": "#/definitions/MacroDependsOn",
                    "default": {
                        "macros": []
                    }
                },
                "description": {
                    "type": "string",
                    "default": ""
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "docs": {
                    "$ref": "#/definitions/Docs",
                    "default": {
                        "show": true,
                        "node_color": null
                    }
                },
                "patch_path": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "arguments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MacroArgument"
                    },
                    "default": []
                },
                "created_at": {
                    "type": "number",
                    "default": 1696465994.421958
                },
                "supported_languages": {
                    "oneOf": [
                        {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": ["python", "sql"]
                            }
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "Macro(name: str, resource_type: dbt.node_types.NodeType, package_name: str, path: str, original_file_path: str, unique_id: str, macro_sql: str, depends_on: dbt.contracts.graph.nodes.MacroDependsOn = <factory>, description: str = '', meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, arguments: List[dbt.contracts.graph.unparsed.MacroArgument] = <factory>, created_at: float = <factory>, supported_languages: Union[List[dbt.node_types.ModelLanguage], NoneType] = None)"
        },
        "MacroArgument": {
            "type": "object",
            "required": ["name"],
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "description": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": false,
            "description": "MacroArgument(name: str, type: Union[str, NoneType] = None, description: str = '')"
        },
        "Documentation": {
            "type": "object",
            "required": [
                "name",
                "resource_type",
                "package_name",
                "path",
                "original_file_path",
                "unique_id",
                "block_contents"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string",
                    "enum": ["doc"]
                },
                "package_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "original_file_path": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                },
                "block_contents": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "description": "Documentation(name: str, resource_type: dbt.node_types.NodeType, package_name: str, path: str, original_file_path: str, unique_id: str, block_contents: str)"
        },
        "Exposure": {
            "type": "object",
            "required": [
                "name",
                "resource_type",
                "package_name",
                "path",
                "original_file_path",
                "unique_id",
                "fqn",
                "type",
                "owner"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string",
                    "enum": ["exposure"]
                },
                "package_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "original_file_path": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                },
                "fqn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "dashboard",
                        "notebook",
                        "analysis",
                        "ml",
                        "application"
                    ]
                },
                "owner": {
                    "$ref": "#/definitions/Owner"
                },
                "description": {
                    "type": "string",
                    "default": ""
                },
                "label": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "maturity": {
                    "oneOf": [
                        {
                            "type": "string",
                            "enum": ["low", "medium", "high"]
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "config": {
                    "$ref": "#/definitions/ExposureConfig",
                    "default": {
                        "enabled": true
                    }
                },
                "unrendered_config": {
                    "type": "object",
                    "default": {}
                },
                "url": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "depends_on": {
                    "$ref": "#/definitions/DependsOn",
                    "default": {
                        "macros": [],
                        "nodes": []
                    }
                },
                "refs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RefArgs"
                    },
                    "default": []
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "created_at": {
                    "type": "number",
                    "default": 1696465994.422623
                }
            },
            "additionalProperties": false,
            "description": "Exposure(name: str, resource_type: dbt.node_types.NodeType, package_name: str, path: str, original_file_path: str, unique_id: str, fqn: List[str], type: dbt.contracts.graph.unparsed.ExposureType, owner: dbt.contracts.graph.unparsed.Owner, description: str = '', label: Union[str, NoneType] = None, maturity: Union[dbt.contracts.graph.unparsed.MaturityType, NoneType] = None, meta: Dict[str, Any] = <factory>, tags: List[str] = <factory>, config: dbt.contracts.graph.model_config.ExposureConfig = <factory>, unrendered_config: Dict[str, Any] = <factory>, url: Union[str, NoneType] = None, depends_on: dbt.contracts.graph.nodes.DependsOn = <factory>, refs: List[dbt.contracts.graph.nodes.RefArgs] = <factory>, sources: List[List[str]] = <factory>, metrics: List[List[str]] = <factory>, created_at: float = <factory>)"
        },
        "Owner": {
            "type": "object",
            "required": [],
            "properties": {
                "email": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": true,
            "description": "Owner(_extra: Dict[str, Any] = <factory>, email: Union[str, NoneType] = None, name: Union[str, NoneType] = None)"
        },
        "ExposureConfig": {
            "type": "object",
            "required": [],
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": true
                }
            },
            "additionalProperties": true,
            "description": "ExposureConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True)"
        },
        "Metric": {
            "type": "object",
            "required": [
                "name",
                "resource_type",
                "package_name",
                "path",
                "original_file_path",
                "unique_id",
                "fqn",
                "description",
                "label",
                "type",
                "type_params"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string",
                    "enum": ["metric"]
                },
                "package_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "original_file_path": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                },
                "fqn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": ["simple", "ratio", "cumulative", "derived"]
                },
                "type_params": {
                    "$ref": "#/definitions/MetricTypeParams"
                },
                "filter": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/WhereFilter"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "metadata": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/SourceFileMetadata"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "meta": {
                    "type": "object",
                    "default": {}
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "config": {
                    "$ref": "#/definitions/MetricConfig",
                    "default": {
                        "enabled": true,
                        "group": null
                    }
                },
                "unrendered_config": {
                    "type": "object",
                    "default": {}
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "depends_on": {
                    "$ref": "#/definitions/DependsOn",
                    "default": {
                        "macros": [],
                        "nodes": []
                    }
                },
                "refs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RefArgs"
                    },
                    "default": []
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default": []
                },
                "created_at": {
                    "type": "number",
                    "default": 1696465994.4238322
                },
                "group": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "Metric(name: str, resource_type: dbt.node_types.NodeType, package_name: str, path: str, original_file_path: str, unique_id: str, fqn: List[str], description: str, label: str, type: dbt_semantic_interfaces.type_enums.metric_type.MetricType, type_params: dbt.contracts.graph.nodes.MetricTypeParams, filter: Union[dbt.contracts.graph.nodes.WhereFilter, NoneType] = None, metadata: Union[dbt.contracts.graph.semantic_models.SourceFileMetadata, NoneType] = None, meta: Dict[str, Any] = <factory>, tags: List[str] = <factory>, config: dbt.contracts.graph.model_config.MetricConfig = <factory>, unrendered_config: Dict[str, Any] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.nodes.DependsOn = <factory>, refs: List[dbt.contracts.graph.nodes.RefArgs] = <factory>, metrics: List[List[str]] = <factory>, created_at: float = <factory>, group: Union[str, NoneType] = None)"
        },
        "MetricTypeParams": {
            "type": "object",
            "required": [],
            "properties": {
                "measure": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/MetricInputMeasure"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "input_measures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MetricInputMeasure"
                    },
                    "default": []
                },
                "numerator": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/MetricInput"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "denominator": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/MetricInput"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "expr": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "window": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/MetricTimeWindow"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "grain_to_date": {
                    "oneOf": [
                        {
                            "type": "string",
                            "enum": ["day", "week", "month", "quarter", "year"]
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "metrics": {
                    "oneOf": [
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MetricInput"
                            }
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "MetricTypeParams(measure: Union[dbt.contracts.graph.nodes.MetricInputMeasure, NoneType] = None, input_measures: List[dbt.contracts.graph.nodes.MetricInputMeasure] = <factory>, numerator: Union[dbt.contracts.graph.nodes.MetricInput, NoneType] = None, denominator: Union[dbt.contracts.graph.nodes.MetricInput, NoneType] = None, expr: Union[str, NoneType] = None, window: Union[dbt.contracts.graph.nodes.MetricTimeWindow, NoneType] = None, grain_to_date: Union[dbt_semantic_interfaces.type_enums.time_granularity.TimeGranularity, NoneType] = None, metrics: Union[List[dbt.contracts.graph.nodes.MetricInput], NoneType] = None)"
        },
        "MetricInputMeasure": {
            "type": "object",
            "required": ["name"],
            "properties": {
                "name": {
                    "type": "string"
                },
                "filter": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/WhereFilter"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "alias": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "join_to_timespine": {
                    "type": "boolean",
                    "default": false
                },
                "fill_nulls_with": {
                    "oneOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "MetricInputMeasure(name: str, filter: Union[dbt.contracts.graph.nodes.WhereFilter, NoneType] = None, alias: Union[str, NoneType] = None, join_to_timespine: bool = False, fill_nulls_with: Union[int, NoneType] = None)"
        },
        "WhereFilter": {
            "type": "object",
            "required": ["where_sql_template"],
            "properties": {
                "where_sql_template": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "description": "WhereFilter(where_sql_template: str)"
        },
        "MetricInput": {
            "type": "object",
            "required": ["name"],
            "properties": {
                "name": {
                    "type": "string"
                },
                "filter": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/WhereFilter"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "alias": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "offset_window": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/MetricTimeWindow"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "offset_to_grain": {
                    "oneOf": [
                        {
                            "type": "string",
                            "enum": ["day", "week", "month", "quarter", "year"]
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "MetricInput(name: str, filter: Union[dbt.contracts.graph.nodes.WhereFilter, NoneType] = None, alias: Union[str, NoneType] = None, offset_window: Union[dbt.contracts.graph.nodes.MetricTimeWindow, NoneType] = None, offset_to_grain: Union[dbt_semantic_interfaces.type_enums.time_granularity.TimeGranularity, NoneType] = None)"
        },
        "MetricTimeWindow": {
            "type": "object",
            "required": ["count", "granularity"],
            "properties": {
                "count": {
                    "type": "integer"
                },
                "granularity": {
                    "type": "string",
                    "enum": ["day", "week", "month", "quarter", "year"]
                }
            },
            "additionalProperties": false,
            "description": "MetricTimeWindow(count: int, granularity: dbt_semantic_interfaces.type_enums.time_granularity.TimeGranularity)"
        },
        "SourceFileMetadata": {
            "type": "object",
            "required": ["repo_file_path", "file_slice"],
            "properties": {
                "repo_file_path": {
                    "type": "string"
                },
                "file_slice": {
                    "$ref": "#/definitions/FileSlice"
                }
            },
            "additionalProperties": false,
            "description": "Provides file context about what something was created from.\n\n    Implementation of the dbt-semantic-interfaces `Metadata` protocol\n    "
        },
        "FileSlice": {
            "type": "object",
            "required": [
                "filename",
                "content",
                "start_line_number",
                "end_line_number"
            ],
            "properties": {
                "filename": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "start_line_number": {
                    "type": "integer"
                },
                "end_line_number": {
                    "type": "integer"
                }
            },
            "additionalProperties": false,
            "description": "Provides file slice level context about what something was created from.\n\n    Implementation of the dbt-semantic-interfaces `FileSlice` protocol\n    "
        },
        "MetricConfig": {
            "type": "object",
            "required": [],
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": true
                },
                "group": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": true,
            "description": "MetricConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True, group: Union[str, NoneType] = None)"
        },
        "Group": {
            "type": "object",
            "required": [
                "name",
                "resource_type",
                "package_name",
                "path",
                "original_file_path",
                "unique_id",
                "owner"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string",
                    "enum": ["group"]
                },
                "package_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "original_file_path": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/Owner"
                }
            },
            "additionalProperties": false,
            "description": "Group(name: str, resource_type: dbt.node_types.NodeType, package_name: str, path: str, original_file_path: str, unique_id: str, owner: dbt.contracts.graph.unparsed.Owner)"
        },
        "SemanticModel": {
            "type": "object",
            "required": [
                "name",
                "resource_type",
                "package_name",
                "path",
                "original_file_path",
                "unique_id",
                "fqn",
                "model"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string",
                    "enum": [
                        "model",
                        "analysis",
                        "test",
                        "snapshot",
                        "operation",
                        "seed",
                        "rpc",
                        "sql_operation",
                        "doc",
                        "source",
                        "macro",
                        "exposure",
                        "metric",
                        "group",
                        "semantic_model"
                    ]
                },
                "package_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "original_file_path": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                },
                "fqn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "model": {
                    "type": "string"
                },
                "node_relation": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/NodeRelation"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "description": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "label": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "defaults": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Defaults"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Entity"
                    },
                    "default": []
                },
                "measures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Measure"
                    },
                    "default": []
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Dimension"
                    },
                    "default": []
                },
                "metadata": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/SourceFileMetadata"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "depends_on": {
                    "$ref": "#/definitions/DependsOn",
                    "default": {
                        "macros": [],
                        "nodes": []
                    }
                },
                "refs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RefArgs"
                    },
                    "default": []
                },
                "created_at": {
                    "type": "number",
                    "default": 1696465994.425479
                },
                "config": {
                    "$ref": "#/definitions/SemanticModelConfig",
                    "default": {
                        "enabled": true
                    }
                },
                "primary_entity": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "SemanticModel(name: str, resource_type: dbt.node_types.NodeType, package_name: str, path: str, original_file_path: str, unique_id: str, fqn: List[str], model: str, node_relation: Union[dbt.contracts.graph.nodes.NodeRelation, NoneType], description: Union[str, NoneType] = None, label: Union[str, NoneType] = None, defaults: Union[dbt.contracts.graph.semantic_models.Defaults, NoneType] = None, entities: Sequence[dbt.contracts.graph.semantic_models.Entity] = <factory>, measures: Sequence[dbt.contracts.graph.semantic_models.Measure] = <factory>, dimensions: Sequence[dbt.contracts.graph.semantic_models.Dimension] = <factory>, metadata: Union[dbt.contracts.graph.semantic_models.SourceFileMetadata, NoneType] = None, depends_on: dbt.contracts.graph.nodes.DependsOn = <factory>, refs: List[dbt.contracts.graph.nodes.RefArgs] = <factory>, created_at: float = <factory>, config: dbt.contracts.graph.model_config.SemanticModelConfig = <factory>, primary_entity: Union[str, NoneType] = None)"
        },
        "NodeRelation": {
            "type": "object",
            "required": ["alias", "schema_name"],
            "properties": {
                "alias": {
                    "type": "string"
                },
                "schema_name": {
                    "type": "string"
                },
                "database": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "relation_name": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "NodeRelation(alias: str, schema_name: str, database: Union[str, NoneType] = None, relation_name: Union[str, NoneType] = None)"
        },
        "Defaults": {
            "type": "object",
            "required": [],
            "properties": {
                "agg_time_dimension": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "Defaults(agg_time_dimension: Union[str, NoneType] = None)"
        },
        "Entity": {
            "type": "object",
            "required": ["name", "type"],
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": ["foreign", "natural", "primary", "unique"]
                },
                "description": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "label": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "role": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "expr": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "Entity(name: str, type: dbt_semantic_interfaces.type_enums.entity_type.EntityType, description: Union[str, NoneType] = None, label: Union[str, NoneType] = None, role: Union[str, NoneType] = None, expr: Union[str, NoneType] = None)"
        },
        "Measure": {
            "type": "object",
            "required": ["name", "agg"],
            "properties": {
                "name": {
                    "type": "string"
                },
                "agg": {
                    "type": "string",
                    "enum": [
                        "sum",
                        "min",
                        "max",
                        "count_distinct",
                        "sum_boolean",
                        "average",
                        "percentile",
                        "median",
                        "count"
                    ]
                },
                "description": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "label": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "create_metric": {
                    "type": "boolean",
                    "default": false
                },
                "expr": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "agg_params": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/MeasureAggregationParameters"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "non_additive_dimension": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/NonAdditiveDimension"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "agg_time_dimension": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "Measure(name: str, agg: dbt_semantic_interfaces.type_enums.aggregation_type.AggregationType, description: Union[str, NoneType] = None, label: Union[str, NoneType] = None, create_metric: bool = False, expr: Union[str, NoneType] = None, agg_params: Union[dbt.contracts.graph.semantic_models.MeasureAggregationParameters, NoneType] = None, non_additive_dimension: Union[dbt.contracts.graph.semantic_models.NonAdditiveDimension, NoneType] = None, agg_time_dimension: Union[str, NoneType] = None)"
        },
        "MeasureAggregationParameters": {
            "type": "object",
            "required": [],
            "properties": {
                "percentile": {
                    "oneOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "use_discrete_percentile": {
                    "type": "boolean",
                    "default": false
                },
                "use_approximate_percentile": {
                    "type": "boolean",
                    "default": false
                }
            },
            "additionalProperties": false,
            "description": "MeasureAggregationParameters(percentile: Union[float, NoneType] = None, use_discrete_percentile: bool = False, use_approximate_percentile: bool = False)"
        },
        "NonAdditiveDimension": {
            "type": "object",
            "required": ["name", "window_choice", "window_groupings"],
            "properties": {
                "name": {
                    "type": "string"
                },
                "window_choice": {
                    "type": "string",
                    "enum": [
                        "sum",
                        "min",
                        "max",
                        "count_distinct",
                        "sum_boolean",
                        "average",
                        "percentile",
                        "median",
                        "count"
                    ]
                },
                "window_groupings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "additionalProperties": false,
            "description": "NonAdditiveDimension(name: str, window_choice: dbt_semantic_interfaces.type_enums.aggregation_type.AggregationType, window_groupings: List[str])"
        },
        "Dimension": {
            "type": "object",
            "required": ["name", "type"],
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": ["categorical", "time"]
                },
                "description": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "label": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "is_partition": {
                    "type": "boolean",
                    "default": false
                },
                "type_params": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/DimensionTypeParams"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "expr": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "metadata": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/SourceFileMetadata"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "Dimension(name: str, type: dbt_semantic_interfaces.type_enums.dimension_type.DimensionType, description: Union[str, NoneType] = None, label: Union[str, NoneType] = None, is_partition: bool = False, type_params: Union[dbt.contracts.graph.semantic_models.DimensionTypeParams, NoneType] = None, expr: Union[str, NoneType] = None, metadata: Union[dbt.contracts.graph.semantic_models.SourceFileMetadata, NoneType] = None)"
        },
        "DimensionTypeParams": {
            "type": "object",
            "required": ["time_granularity"],
            "properties": {
                "time_granularity": {
                    "type": "string",
                    "enum": ["day", "week", "month", "quarter", "year"]
                },
                "validity_params": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/DimensionValidityParams"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "description": "DimensionTypeParams(time_granularity: dbt_semantic_interfaces.type_enums.time_granularity.TimeGranularity, validity_params: Union[dbt.contracts.graph.semantic_models.DimensionValidityParams, NoneType] = None)"
        },
        "DimensionValidityParams": {
            "type": "object",
            "required": [],
            "properties": {
                "is_start": {
                    "type": "boolean",
                    "default": false
                },
                "is_end": {
                    "type": "boolean",
                    "default": false
                }
            },
            "additionalProperties": false,
            "description": "DimensionValidityParams(is_start: bool = False, is_end: bool = False)"
        },
        "SemanticModelConfig": {
            "type": "object",
            "required": [],
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": true
                }
            },
            "additionalProperties": true,
            "description": "SemanticModelConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True)"
        }
    },
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://schemas.getdbt.com/dbt/manifest/v10.json"
}
